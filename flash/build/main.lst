ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB135:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** #include "flash.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include <stdio.h>
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 2


  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint8_t flash_buff[5] = {0xEF,0x01,0x02,0x03,0x04};
  48:Core/Src/main.c **** uint8_t result_buff[5];
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** uint8_t flag;
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c ****   FLASH_READ_SECTOR5(result_buff,5);
  96:Core/Src/main.c ****   if(result_buff[0] == 0xEF)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     printf("Flash data exited!\r\n");
  99:Core/Src/main.c ****     flag = 0;
 100:Core/Src/main.c ****   }
 101:Core/Src/main.c ****   else
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     printf("Flash data empty!\r\nBeging to write!\r\n");
 104:Core/Src/main.c ****     FLASH_WRITE_SECTOR5(flash_buff,5);
 105:Core/Src/main.c ****     flag = 1;
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   FLASH_READ_SECTOR5(result_buff,5);
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Infinite loop */
 112:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 113:Core/Src/main.c ****   while (1)
 114:Core/Src/main.c ****   {
 115:Core/Src/main.c ****     /* USER CODE END WHILE */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 118:Core/Src/main.c ****     printf("%d,%d,%d,%d,%d\r\n",result_buff[0],result_buff[1],result_buff[2],result_buff[3],result_
 119:Core/Src/main.c ****     printf("%d\r\n",flag);
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief System Clock Configuration
 126:Core/Src/main.c ****   * @retval None
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** void SystemClock_Config(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 137:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 138:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 4


 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /* USER CODE END 4 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void Error_Handler(void)
 176:Core/Src/main.c **** {
  29              		.loc 1 176 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 177:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 178:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 179:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 179 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 5


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 6


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 7


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 180:Core/Src/main.c ****   while (1)
  51              		.loc 1 180 3 discriminator 1 view .LVU4
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****   }
  52              		.loc 1 182 3 discriminator 1 view .LVU5
 180:Core/Src/main.c ****   while (1)
  53              		.loc 1 180 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE135:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB134:
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 129 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 80
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 95B0     		sub	sp, sp, #84
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 8


  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 88
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 130 3 view .LVU8
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 130 22 is_stmt 0 view .LVU9
  81 0004 3022     		movs	r2, #48
  82 0006 0021     		movs	r1, #0
  83 0008 08A8     		add	r0, sp, #32
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 131:Core/Src/main.c **** 
  86              		.loc 1 131 3 is_stmt 1 view .LVU10
 131:Core/Src/main.c **** 
  87              		.loc 1 131 22 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0393     		str	r3, [sp, #12]
  90 0012 0493     		str	r3, [sp, #16]
  91 0014 0593     		str	r3, [sp, #20]
  92 0016 0693     		str	r3, [sp, #24]
  93 0018 0793     		str	r3, [sp, #28]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  94              		.loc 1 135 3 is_stmt 1 view .LVU12
  95              	.LBB6:
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  96              		.loc 1 135 3 view .LVU13
  97 001a 0193     		str	r3, [sp, #4]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  98              		.loc 1 135 3 view .LVU14
  99 001c 204A     		ldr	r2, .L9
 100 001e 116C     		ldr	r1, [r2, #64]
 101 0020 41F08051 		orr	r1, r1, #268435456
 102 0024 1164     		str	r1, [r2, #64]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 103              		.loc 1 135 3 view .LVU15
 104 0026 126C     		ldr	r2, [r2, #64]
 105 0028 02F08052 		and	r2, r2, #268435456
 106 002c 0192     		str	r2, [sp, #4]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 107              		.loc 1 135 3 view .LVU16
 108 002e 019A     		ldr	r2, [sp, #4]
 109              	.LBE6:
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 110              		.loc 1 135 3 view .LVU17
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 111              		.loc 1 136 3 view .LVU18
 112              	.LBB7:
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 113              		.loc 1 136 3 view .LVU19
 114 0030 0293     		str	r3, [sp, #8]
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 115              		.loc 1 136 3 view .LVU20
 116 0032 1C4A     		ldr	r2, .L9+4
 117 0034 1368     		ldr	r3, [r2]
 118 0036 23F44043 		bic	r3, r3, #49152
 119 003a 43F40043 		orr	r3, r3, #32768
 120 003e 1360     		str	r3, [r2]
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 9


 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121              		.loc 1 136 3 view .LVU21
 122 0040 1368     		ldr	r3, [r2]
 123 0042 03F44043 		and	r3, r3, #49152
 124 0046 0293     		str	r3, [sp, #8]
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 125              		.loc 1 136 3 view .LVU22
 126 0048 029B     		ldr	r3, [sp, #8]
 127              	.LBE7:
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 128              		.loc 1 136 3 view .LVU23
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 129              		.loc 1 140 3 view .LVU24
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 130              		.loc 1 140 36 is_stmt 0 view .LVU25
 131 004a 0123     		movs	r3, #1
 132 004c 0893     		str	r3, [sp, #32]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133              		.loc 1 141 3 is_stmt 1 view .LVU26
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 134              		.loc 1 141 30 is_stmt 0 view .LVU27
 135 004e 4FF48033 		mov	r3, #65536
 136 0052 0993     		str	r3, [sp, #36]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137              		.loc 1 142 3 is_stmt 1 view .LVU28
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 138              		.loc 1 142 34 is_stmt 0 view .LVU29
 139 0054 0223     		movs	r3, #2
 140 0056 0E93     		str	r3, [sp, #56]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 141              		.loc 1 143 3 is_stmt 1 view .LVU30
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 142              		.loc 1 143 35 is_stmt 0 view .LVU31
 143 0058 4FF48002 		mov	r2, #4194304
 144 005c 0F92     		str	r2, [sp, #60]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 145              		.loc 1 144 3 is_stmt 1 view .LVU32
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 146              		.loc 1 144 30 is_stmt 0 view .LVU33
 147 005e 1922     		movs	r2, #25
 148 0060 1092     		str	r2, [sp, #64]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 149              		.loc 1 145 3 is_stmt 1 view .LVU34
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 150              		.loc 1 145 30 is_stmt 0 view .LVU35
 151 0062 9022     		movs	r2, #144
 152 0064 1192     		str	r2, [sp, #68]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 153              		.loc 1 146 3 is_stmt 1 view .LVU36
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 154              		.loc 1 146 30 is_stmt 0 view .LVU37
 155 0066 1293     		str	r3, [sp, #72]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156              		.loc 1 147 3 is_stmt 1 view .LVU38
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157              		.loc 1 147 30 is_stmt 0 view .LVU39
 158 0068 0423     		movs	r3, #4
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 10


 159 006a 1393     		str	r3, [sp, #76]
 148:Core/Src/main.c ****   {
 160              		.loc 1 148 3 is_stmt 1 view .LVU40
 148:Core/Src/main.c ****   {
 161              		.loc 1 148 7 is_stmt 0 view .LVU41
 162 006c 08A8     		add	r0, sp, #32
 163 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 164              	.LVL1:
 148:Core/Src/main.c ****   {
 165              		.loc 1 148 6 view .LVU42
 166 0072 80B9     		cbnz	r0, .L7
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167              		.loc 1 154 3 is_stmt 1 view .LVU43
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168              		.loc 1 154 31 is_stmt 0 view .LVU44
 169 0074 0F23     		movs	r3, #15
 170 0076 0393     		str	r3, [sp, #12]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171              		.loc 1 156 3 is_stmt 1 view .LVU45
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172              		.loc 1 156 34 is_stmt 0 view .LVU46
 173 0078 0221     		movs	r1, #2
 174 007a 0491     		str	r1, [sp, #16]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 175              		.loc 1 157 3 is_stmt 1 view .LVU47
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 176              		.loc 1 157 35 is_stmt 0 view .LVU48
 177 007c 0023     		movs	r3, #0
 178 007e 0593     		str	r3, [sp, #20]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 179              		.loc 1 158 3 is_stmt 1 view .LVU49
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 180              		.loc 1 158 36 is_stmt 0 view .LVU50
 181 0080 4FF48053 		mov	r3, #4096
 182 0084 0693     		str	r3, [sp, #24]
 159:Core/Src/main.c **** 
 183              		.loc 1 159 3 is_stmt 1 view .LVU51
 159:Core/Src/main.c **** 
 184              		.loc 1 159 36 is_stmt 0 view .LVU52
 185 0086 0793     		str	r3, [sp, #28]
 161:Core/Src/main.c ****   {
 186              		.loc 1 161 3 is_stmt 1 view .LVU53
 161:Core/Src/main.c ****   {
 187              		.loc 1 161 7 is_stmt 0 view .LVU54
 188 0088 03A8     		add	r0, sp, #12
 189 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 190              	.LVL2:
 161:Core/Src/main.c ****   {
 191              		.loc 1 161 6 view .LVU55
 192 008e 20B9     		cbnz	r0, .L8
 165:Core/Src/main.c **** 
 193              		.loc 1 165 1 view .LVU56
 194 0090 15B0     		add	sp, sp, #84
 195              	.LCFI2:
 196              		.cfi_remember_state
 197              		.cfi_def_cfa_offset 4
 198              		@ sp needed
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 11


 199 0092 5DF804FB 		ldr	pc, [sp], #4
 200              	.L7:
 201              	.LCFI3:
 202              		.cfi_restore_state
 150:Core/Src/main.c ****   }
 203              		.loc 1 150 5 is_stmt 1 view .LVU57
 204 0096 FFF7FEFF 		bl	Error_Handler
 205              	.LVL3:
 206              	.L8:
 163:Core/Src/main.c ****   }
 207              		.loc 1 163 5 view .LVU58
 208 009a FFF7FEFF 		bl	Error_Handler
 209              	.LVL4:
 210              	.L10:
 211 009e 00BF     		.align	2
 212              	.L9:
 213 00a0 00380240 		.word	1073887232
 214 00a4 00700040 		.word	1073770496
 215              		.cfi_endproc
 216              	.LFE134:
 218              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 219              		.align	2
 220              	.LC0:
 221 0000 466C6173 		.ascii	"Flash data exited!\015\000"
 221      68206461 
 221      74612065 
 221      78697465 
 221      64210D00 
 222              		.align	2
 223              	.LC1:
 224 0014 466C6173 		.ascii	"Flash data empty!\015\012Beging to write!\015\000"
 224      68206461 
 224      74612065 
 224      6D707479 
 224      210D0A42 
 225 0039 000000   		.align	2
 226              	.LC2:
 227 003c 25642C25 		.ascii	"%d,%d,%d,%d,%d\015\012\000"
 227      642C2564 
 227      2C25642C 
 227      25640D0A 
 227      00
 228 004d 000000   		.align	2
 229              	.LC3:
 230 0050 25640D0A 		.ascii	"%d\015\012\000"
 230      00
 231              		.section	.text.main,"ax",%progbits
 232              		.align	1
 233              		.global	main
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	main:
 240              	.LFB133:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 241              		.loc 1 70 1 view -0
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 12


 242              		.cfi_startproc
 243              		@ Volatile: function does not return.
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 00B5     		push	{lr}
 247              	.LCFI4:
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 14, -4
 250 0002 83B0     		sub	sp, sp, #12
 251              	.LCFI5:
 252              		.cfi_def_cfa_offset 16
  78:Core/Src/main.c **** 
 253              		.loc 1 78 3 view .LVU60
 254 0004 FFF7FEFF 		bl	HAL_Init
 255              	.LVL5:
  85:Core/Src/main.c **** 
 256              		.loc 1 85 3 view .LVU61
 257 0008 FFF7FEFF 		bl	SystemClock_Config
 258              	.LVL6:
  92:Core/Src/main.c ****   MX_USART1_UART_Init();
 259              		.loc 1 92 3 view .LVU62
 260 000c FFF7FEFF 		bl	MX_GPIO_Init
 261              	.LVL7:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 262              		.loc 1 93 3 view .LVU63
 263 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 264              	.LVL8:
  95:Core/Src/main.c ****   if(result_buff[0] == 0xEF)
 265              		.loc 1 95 3 view .LVU64
 266 0014 184C     		ldr	r4, .L17
 267 0016 0522     		movs	r2, #5
 268 0018 2146     		mov	r1, r4
 269 001a 1848     		ldr	r0, .L17+4
 270 001c FFF7FEFF 		bl	FlashRead
 271              	.LVL9:
  96:Core/Src/main.c ****   {
 272              		.loc 1 96 3 view .LVU65
  96:Core/Src/main.c ****   {
 273              		.loc 1 96 17 is_stmt 0 view .LVU66
 274 0020 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  96:Core/Src/main.c ****   {
 275              		.loc 1 96 5 view .LVU67
 276 0022 EF2B     		cmp	r3, #239
 277 0024 20D0     		beq	.L16
 103:Core/Src/main.c ****     FLASH_WRITE_SECTOR5(flash_buff,5);
 278              		.loc 1 103 5 is_stmt 1 view .LVU68
 279 0026 1648     		ldr	r0, .L17+8
 280 0028 FFF7FEFF 		bl	puts
 281              	.LVL10:
 104:Core/Src/main.c ****     flag = 1;
 282              		.loc 1 104 5 view .LVU69
 283 002c 0522     		movs	r2, #5
 284 002e 1549     		ldr	r1, .L17+12
 285 0030 1248     		ldr	r0, .L17+4
 286 0032 FFF7FEFF 		bl	FlashWrite
 287              	.LVL11:
 105:Core/Src/main.c ****   }
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 13


 288              		.loc 1 105 5 view .LVU70
 105:Core/Src/main.c ****   }
 289              		.loc 1 105 10 is_stmt 0 view .LVU71
 290 0036 144B     		ldr	r3, .L17+16
 291 0038 0122     		movs	r2, #1
 292 003a 1A70     		strb	r2, [r3]
 293              	.L13:
 107:Core/Src/main.c **** 
 294              		.loc 1 107 3 is_stmt 1 view .LVU72
 295 003c 0522     		movs	r2, #5
 296 003e 0E49     		ldr	r1, .L17
 297 0040 0E48     		ldr	r0, .L17+4
 298 0042 FFF7FEFF 		bl	FlashRead
 299              	.LVL12:
 300              	.L14:
 113:Core/Src/main.c ****   {
 301              		.loc 1 113 3 discriminator 1 view .LVU73
 118:Core/Src/main.c ****     printf("%d\r\n",flag);
 302              		.loc 1 118 5 discriminator 1 view .LVU74
 118:Core/Src/main.c ****     printf("%d\r\n",flag);
 303              		.loc 1 118 44 is_stmt 0 discriminator 1 view .LVU75
 304 0046 0C49     		ldr	r1, .L17
 118:Core/Src/main.c ****     printf("%d\r\n",flag);
 305              		.loc 1 118 89 discriminator 1 view .LVU76
 306 0048 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 118:Core/Src/main.c ****     printf("%d\r\n",flag);
 307              		.loc 1 118 104 discriminator 1 view .LVU77
 308 004a 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 118:Core/Src/main.c ****     printf("%d\r\n",flag);
 309              		.loc 1 118 5 discriminator 1 view .LVU78
 310 004c 0192     		str	r2, [sp, #4]
 311 004e 0093     		str	r3, [sp]
 312 0050 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 313 0052 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 314 0054 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 315 0056 0D48     		ldr	r0, .L17+20
 316 0058 FFF7FEFF 		bl	printf
 317              	.LVL13:
 119:Core/Src/main.c ****   }
 318              		.loc 1 119 5 is_stmt 1 discriminator 1 view .LVU79
 319 005c 0A4B     		ldr	r3, .L17+16
 320 005e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 321 0060 0B48     		ldr	r0, .L17+24
 322 0062 FFF7FEFF 		bl	printf
 323              	.LVL14:
 113:Core/Src/main.c ****   {
 324              		.loc 1 113 9 discriminator 1 view .LVU80
 325 0066 EEE7     		b	.L14
 326              	.L16:
  98:Core/Src/main.c ****     flag = 0;
 327              		.loc 1 98 5 view .LVU81
 328 0068 0A48     		ldr	r0, .L17+28
 329 006a FFF7FEFF 		bl	puts
 330              	.LVL15:
  99:Core/Src/main.c ****   }
 331              		.loc 1 99 5 view .LVU82
  99:Core/Src/main.c ****   }
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 14


 332              		.loc 1 99 10 is_stmt 0 view .LVU83
 333 006e 064B     		ldr	r3, .L17+16
 334 0070 0022     		movs	r2, #0
 335 0072 1A70     		strb	r2, [r3]
 336 0074 E2E7     		b	.L13
 337              	.L18:
 338 0076 00BF     		.align	2
 339              	.L17:
 340 0078 00000000 		.word	result_buff
 341 007c 00000208 		.word	134348800
 342 0080 14000000 		.word	.LC1
 343 0084 00000000 		.word	.LANCHOR0
 344 0088 00000000 		.word	flag
 345 008c 3C000000 		.word	.LC2
 346 0090 50000000 		.word	.LC3
 347 0094 00000000 		.word	.LC0
 348              		.cfi_endproc
 349              	.LFE133:
 351              		.comm	flag,1,1
 352              		.comm	result_buff,5,4
 353              		.global	flash_buff
 354              		.section	.data.flash_buff,"aw"
 355              		.align	2
 356              		.set	.LANCHOR0,. + 0
 359              	flash_buff:
 360 0000 EF010203 		.ascii	"\357\001\002\003\004"
 360      04
 361              		.text
 362              	.Letext0:
 363              		.file 3 "d:\\vs_code_stm32\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 364              		.file 4 "d:\\vs_code_stm32\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 365              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 366              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 367              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 368              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 369              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 370              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 371              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 372              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 373              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 374              		.file 14 "Core/Inc/usart.h"
 375              		.file 15 "d:\\vs_code_stm32\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 376              		.file 16 "d:\\vs_code_stm32\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 377              		.file 17 "d:\\vs_code_stm32\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 378              		.file 18 "d:\\vs_code_stm32\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 379              		.file 19 "Core/Inc/gpio.h"
 380              		.file 20 "Core/Inc/flash.h"
 381              		.file 21 "<built-in>"
 382              		.file 22 "d:\\vs_code_stm32\\9 2019-q4-major\\arm-none-eabi\\include\\stdio.h"
ARM GAS  C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:18     .text.Error_Handler:00000000 $t
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:26     .text.Error_Handler:00000000 Error_Handler
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:59     .text.SystemClock_Config:00000000 $t
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:66     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:213    .text.SystemClock_Config:000000a0 $d
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:219    .rodata.main.str1.4:00000000 $d
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:232    .text.main:00000000 $t
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:239    .text.main:00000000 main
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:340    .text.main:00000078 $d
                            *COM*:00000005 result_buff
                            *COM*:00000001 flag
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:359    .data.flash_buff:00000000 flash_buff
C:\Users\Kiana\AppData\Local\Temp\ccsd664A.s:355    .data.flash_buff:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
FlashRead
puts
FlashWrite
printf
